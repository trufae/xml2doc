#
# xmlPdf makefile
#               - pancake
#


CC=gcc
OBJ=main.o defs.o parse.o parse_include.o parse_info.o parse_img.o parse_t.o parse_page.o parse_default.o parse_bookmark.o parse_sep.o output_t.o output_doc.o output_img.o output_info.o output_page.o output_sep.o parm.o
IPATH=-I/usr/pkg/include/libxml2 -I/usr/include/libxml2 -I. -I/usr/pkg/include -I/usr/local/include
LPATH=-L/usr/pkg/lib -L/usr/local/lib
CFLAGS=-Wall -c $(IPATH) -fno-asm -funroll-all-loops -fstrength-reduce -frerun-loop-opt -march=i586 -mcpu=i586 -x c -fshort-enums -ggdb
LFLAGS=-lxml2 -lpdf $(LPATH)
BIN=xml2doc

all:	check build 

install: all
	cp -f ./$(BIN) /usr/bin/

uninstall:
	rm -f /usr/bin/xmldoc

build: $(OBJ)
	@printf "\n\e[32mLinking objects...\e[0m\n"
	$(CC) $(LFLAGS) $(OBJ) -o $(BIN)
	#strip -s $(BIN)
	@printf "\n\n\e[32mCompilation process done.\e[0m\n"

main.o: main.c main.h
	$(CC) $(CFLAGS) main.c

parm.o: parm.c parm.h
	$(CC) $(CFLAGS) parm.c

output_doc.o: output_doc.c output.h
	$(CC) $(CFLAGS) output_doc.c

output_img.o: output_img.c output.h
	$(CC) $(CFLAGS) output_img.c

output_info.o: output_info.c output.h
	$(CC) $(CFLAGS) output_info.c

output_page.o: output_page.c output.h
	$(CC) $(CFLAGS) output_page.c

output_sep.o: output_sep.c output.h
	$(CC) $(CFLAGS) output_sep.c

output_t.o: output_t.c output.h
	$(CC) $(CFLAGS) output_t.c

parse_sep.o: parse_sep.c defs.h
	$(CC) $(CFLAGS) parse_sep.c

defs.o: defs.c defs.h
	$(CC) $(CFLAGS) defs.c

parse.o: parse.c defs.h
	$(CC) $(CFLAGS) parse.c

parse_include.o: parse_include.c defs.h
	$(CC) $(CFLAGS) parse_include.c

parse_info.o: parse_info.c defs.h
	$(CC) $(CFLAGS) parse_info.c

parse_img.o: parse_img.c defs.h
	$(CC) $(CFLAGS) parse_img.c

parse_t.o: parse_t.c defs.h
	$(CC) $(CFLAGS) parse_t.c

parse_page.o: parse_page.c defs.h
	$(CC) $(CFLAGS) parse_page.c

parse_default.o: parse_default.c defs.h
	$(CC) $(CFLAGS) parse_default.c

parse_bookmark.o: parse_bookmark.c defs.h
	$(CC) $(CFLAGS) parse_bookmark.c

check:
	@printf "\n\e[32mChecking libs...\e[0m\n"
	@if ( test -z "`whereis libpdf | grep la`" &&\
		locate pdf >/dev/null ); then \
		echo "o libpdf       - no"; exit 1; else\
		echo "o libpdf       - ok"; fi
	@if ( test -z "`whereis libxml2 | grep la`" &&\
		locate xml2 >/dev/null ); then \
		echo "o libxml2      - no"; exit 1; else\
		echo "o libxml2      - ok"; fi
	@printf "\n\n\e[32mBuilding sources...\e[0m\n"

clean:
	rm -rf $(OBJ) $(BIN) *.o a.out *~ DEADJOE .*.swp *.txt *.pdf *.html *.xml

